openapi: 3.0.0
info:
  title: Player API
  version: 1.0.0
  description: API documentation for managing players

paths:
  /players:
    get:
      summary: Get all players
      tags:
        - Players
      responses:
        '200':
          description: List of all players
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
    post:
      summary: Create a new player
      tags:
        - Players
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlayer'
      responses:
        '201':
          description: Player created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'

  /players/{playerId}:
    get:
      summary: Get player by ID
      tags:
        - Players
      parameters:
        - name: playerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Player details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '404':
          description: Player not found

    put:
      summary: Update player
      tags:
        - Players
      parameters:
        - name: playerId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlayer'
      responses:
        '200':
          description: Player updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'

    delete:
      summary: Delete player
      tags:
        - Players
      parameters:
        - name: playerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Player deleted successfully

  /players/team/{teamId}:
    get:
      summary: Get players by team ID
      tags:
        - Players
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: List of players in the specified team
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
        '404':
          description: Team not found or no players available

components:
  schemas:
    Player:
      type: object
      properties:
        id:
          type: string
          format: uuid
        fullName:
          type: string
        dob:
          type: string
          format: date-time
        countryId:
          type: string
        battingStyle:
          type: string
          nullable: true
        bowlingStyle:
          type: string
          nullable: true
        role:
          type: string
          enum: [ BATSMAN, BOWLER, ALL_ROUNDER, WICKET_KEEPER ]
        active:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required: [ fullName, dob, countryId, role, active ]

    CreatePlayer:
      type: object
      properties:
        fullName:
          type: string
        dob:
          type: string
          format: date-time
        countryId:
          type: string
        battingStyle:
          type: string
        bowlingStyle:
          type: string
        role:
          type: string
          enum: [ BATSMAN, BOWLER, ALL_ROUNDER, WICKET_KEEPER ]
      required: [ fullName, dob, countryId, role ]

    UpdatePlayer:
      type: object
      properties:
        fullName:
          type: string
        dob:
          type: string
          format: date-time
        countryId:
          type: string
        battingStyle:
          type: string
        bowlingStyle:
          type: string
        role:
          type: string
          enum: [ BATSMAN, BOWLER, ALL_ROUNDER, WICKET_KEEPER ]
        active:
          type: boolean
