openapi: 3.0.3
info:
  title: Cricket API - Public & Secure
  version: 1.0.0
  description: OpenAPI spec for public and protected routes
paths:
  /auth/login:
    post:
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
        '401':
          description: Invalid credentials
      tags:
        - Auth
  /auth/logout:
    post:
      summary: Logout user
      responses:
        '200':
          description: Logout successful
        '401':
          description: Unauthorized
      tags:
        - Auth
  /user/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                role:
                  type: string
                  enum:
                    - ADMIN
                    - ORGANIZER
                    - CUSTOMER
              required:
                - email
                - password
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Bad Request
      tags:
        - User Public
  /user/reset-password:
    post:
      summary: Reset user password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                newPassword:
                  type: string
              required:
                - email
                - newPassword
      responses:
        '200':
          description: Password reset successfully
        '400':
          description: Invalid email or request body
      tags:
        - User Public
  /user:
    get:
      summary: Get all users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      tags:
        - User
    put:
      summary: Update user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request body
      tags:
        - User
  /user/me:
    get:
      summary: Get logged-in user's profile
      responses:
        '200':
          description: User profile retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
      tags:
        - User
  /user/change-password:
    put:
      summary: Change user password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
                newPassword:
                  type: string
              required:
                - currentPassword
                - newPassword
      responses:
        '200':
          description: Password changed successfully
        '400':
          description: Invalid current password
      tags:
        - User
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        role:
          type: string
          enum:
            - ADMIN
            - ORGANIZER
            - CUSTOMER
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - email
        - role
    UserUpdate:
      type: object
      properties:
        email:
          type: string
          format: email
        role:
          type: string
          enum:
            - ADMIN
            - ORGANIZER
            - CUSTOMER
