Enum TeamType {
  INTERNATIONAL
  DOMESTIC
  LEAGUE
}

Enum PlayerRole {
  BATSMAN
  BOWLER
  ALL_ROUNDER
  WICKET_KEEPER
}

Enum SeriesType {
  BILATERAL
  LEAGUE
  KNOCKOUT
  ROUND_ROBIN
}

Enum MatchFormat {
  TEST
  ODI
  T20
}

Enum MatchStatus {
  SCHEDULED
  LIVE
  COMPLETED
  CANCELLED
  ABANDONED
}

Enum TossDecision {
  BAT
  BOWL
}

Enum ResultType {
  WIN
  LOSS
  DRAW
  TIE
  NO_RESULT
}

Table Country {
  id uuid [pk]
  code varchar [unique, note: "ISO Alpha-3 code (e.g. IND, AUS)"]
  name varchar
  flagUrl varchar
}

Table Team {
  id uuid [pk]
  name varchar
  type TeamType
  logoUrl varchar
  countryId uuid [ref: > Country.id]
  createdAt datetime
  updatedAt datetime
}

Table Player {
  id uuid [pk]
  fullName varchar
  dob date
  countryId uuid [ref: > Country.id]
  battingStyle varchar
  bowlingStyle varchar
  role PlayerRole
  active boolean
  createdAt datetime
  updatedAt datetime
}

Table PlayerTeam {
  id uuid [pk]
  playerId uuid [ref: > Player.id]
  teamId uuid [ref: > Team.id]
  startDate datetime
  endDate datetime
  createdAt datetime
  updatedAt datetime

  indexes {
    (playerId, teamId, startDate) [unique]
  }
}

Table Series {
  id uuid [pk]
  name varchar
  description text
  type SeriesType
  startDate datetime
  endDate datetime
  createdAt datetime
  updatedAt datetime
}

Table SeriesHostCountry {
  id uuid [pk]
  seriesId uuid [ref: > Series.id]
  countryId uuid [ref: > Country.id]
  createdAt datetime
  updatedAt datetime

  indexes {
    (seriesId, countryId) [unique]
  }
}

Table SeriesTeam {
  id uuid [pk]
  seriesId uuid [ref: > Series.id]
  teamId uuid [ref: > Team.id]
  createdAt datetime
  updatedAt datetime

  indexes {
    (seriesId, teamId) [unique]
  }
}

Table SeriesFormat {
  id uuid [pk]
  seriesId uuid [ref: > Series.id]
  format MatchFormat
  matchCount int
  createdAt datetime
  updatedAt datetime
}

Table SeriesFormatTeam {
  id uuid [pk]
  seriesFormatId uuid [ref: > SeriesFormat.id]
  teamId uuid [ref: > Team.id]
  createdAt datetime
  updatedAt datetime

  indexes {
    (seriesFormatId, teamId) [unique]
  }
}

Table SeriesFormatTeamPlayer {
  id uuid [pk]
  seriesFormatId uuid [ref: > SeriesFormat.id]
  teamId uuid [ref: > Team.id]
  playerId uuid [ref: > Player.id]
  isCaptain boolean
  isWicketkeeper boolean
  createdAt datetime
  updatedAt datetime

  indexes {
    (seriesFormatId, teamId, playerId) [unique]
  }
}

Table Match {
  id                uuid          [pk]
  seriesId          uuid?         [ref: > Series.id]
  seriesFormatId    uuid?         [ref: > SeriesFormat.id]
  venueId           uuid          [ref: > Venue.id]
  team1Id           uuid          [ref: > Team.id]
  team2Id           uuid          [ref: > Team.id]
  matchDate         datetime
  format            MatchFormat
  status            MatchStatus   [default: "SCHEDULED"]
  matchSummary      text?         [note: "Optional summary or highlights"]
  createdAt         datetime
  updatedAt         datetime

  Indexes {
    (seriesId, matchDate)        [name: "series_matches"]
    (venueId, matchDate)         [name: "venue_schedule"]
    (team1Id, matchDate)         [name: "team1_schedule"]
    (team2Id, matchDate)         [name: "team2_schedule"]
  }
}

Table Toss {
  id                uuid          [pk]
  matchId           uuid          [ref: > Match.id]
  winningTeamId     uuid          [ref: > Team.id]
  decision          TossDecision
  createdAt         datetime

  Indexes {
    (matchId)                     [unique]
  }
}

Table Innings {
  id                uuid          [pk]
  matchId           uuid          [ref: > Match.id]
  inningsOrder      int           [note: "1 = 1st Innings, 2 = 2nd Innings, etc."]
  battingTeamId     uuid          [ref: > Team.id]
  bowlingTeamId     uuid          [ref: > Team.id]
  totalRuns         int
  wickets           int
  overs             float
  extrasByes        int           [default: 0]
  extrasLegByes     int           [default: 0]
  extrasWides       int           [default: 0]
  extrasNoBalls     int           [default: 0]
  extrasPenalty     int           [default: 0]
  declared          boolean       [default: false]
  inningsDuration   int?          [note: "Duration in minutes"]
  createdAt         datetime
  updatedAt         datetime

  Indexes {
    (matchId, inningsOrder)      [unique, name: "match_innings"]
  }
}

Table BattingScorecard {
  id                   uuid          [pk]
  matchId              uuid          [ref: > Match.id]
  seriesId             uuid?         [ref: > Series.id]
  inningsId            uuid          [ref: > Innings.id]
  playerId             uuid          [ref: > Player.id]
  battingPosition      int?          [note: "Batting order position"]
  runs                 int
  ballsFaced           int
  fours                int
  sixes                int
  outType              varchar       [note: "BOWLED, CAUGHT, LBW, RUN_OUT, RETIRED_HURT, NOT_OUT"]
  dismissalBowlerId    uuid?         [ref: > Player.id]
  dismissalFielderId   uuid?         [ref: > Player.id]
  dismissalOver        float?        [note: "Over at which dismissal occurred"]
  createdAt            datetime

  Indexes {
    (inningsId, playerId)        [unique, name: "player_innings"]
    (playerId)                   [name: "batting_player_index"]
  }
}

Table BowlingScorecard {
  id                   uuid          [pk]
  matchId              uuid          [ref: > Match.id]
  seriesId             uuid?         [ref: > Series.id]
  inningsId            uuid          [ref: > Innings.id]
  playerId             uuid          [ref: > Player.id]
  overs                float
  maidens              int
  runsConceded         int
  wickets              int
  wides                int
  noballs              int
  createdAt            datetime

  Indexes {
    (inningsId, playerId)        [unique, name: "bowler_innings"]
    (playerId)                   [name: "bowling_player_index"]
  }
}

Table MatchResult {
  id                   uuid          [pk]
  matchId              uuid          [ref: > Match.id]
  resultType           ResultType
  winningTeamId        uuid?         [ref: > Team.id]
  margin               varchar       [note: "e.g. 'by 5 wickets', 'by 45 runs'"]
  playerOfMatchId      uuid?         [ref: > Player.id]
  matchHighlights      text?
  createdAt            datetime
  updatedAt            datetime

  Indexes {
    (matchId)                     [unique]
  }
}

Table MatchSquad {
  id               uuid        [pk]
  matchId          uuid        [ref: > Match.id]
  teamId           uuid        [ref: > Team.id]
  playerId         uuid        [ref: > Player.id]
  isCaptain        boolean     [default: false]
  isWicketkeeper   boolean     [default: false]
  createdAt        datetime
  updatedAt        datetime

  Indexes {
    (matchId, teamId, playerId) [unique, name: "match_squad_unique"]
  }
}
